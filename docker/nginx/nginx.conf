user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_response_length" "$upstream_response_time" "$upstream_cache_status"';


    proxy_cache_path /etc/nginx/proxy_cache_dir levels=1:2 keys_zone=mycache:30m inactive=1d max_size=100m;

    access_log  /var/log/nginx/access.log  main;

    server_tokens off;

    sendfile        on; # Sendfile 是 Linux2.0 以后的推出的一个系统调用，它能简化网络传输过程中的步骤，提高服务器性能
    tcp_nopush      on; # 设置数据包会累积一下再一起传输，可以提高一些传输效率。tcp_nopush必须和 sendfile 搭配使用
    tcp_nodelay     on; # 小的数据包不等待直接传输。默认为on。看上去是和 tcp_nopush相反的功能，但是两边都为 on 时 nginx 也可以平衡这个功能的使用
    keepalive_timeout  300;
    keepalive_requests 1000;
    send_timeout 300;
    # autoindex on;

    client_header_timeout 300;
    client_body_timeout 300;

    proxy_buffering  on;
    proxy_buffer_size 4k;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 32k;
    proxy_max_temp_file_size 0;

    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 1;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    include http_vhost/*.conf;
    include http_upstream/*.conf;
}

